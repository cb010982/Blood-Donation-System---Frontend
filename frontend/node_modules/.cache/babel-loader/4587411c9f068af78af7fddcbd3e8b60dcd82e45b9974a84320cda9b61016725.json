{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\codic\\\\OneDrive\\\\Documents\\\\Blood-Donation-System---Frontend\\\\frontend\\\\src\\\\BloodCountChart.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"./BloodCountChart.css\";\nimport { BarChart, Bar, XAxis, YAxis, CartesianGrid, Tooltip, Cell } from \"recharts\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction BloodCountChart() {\n  _s();\n  const [bloodCounts, setBloodCounts] = useState([{\n    name: \"A+\",\n    count: 0\n  }, {\n    name: \"A-\",\n    count: 0\n  }, {\n    name: \"B+\",\n    count: 0\n  }, {\n    name: \"B-\",\n    count: 0\n  }, {\n    name: \"AB+\",\n    count: 0\n  }, {\n    name: \"AB-\",\n    count: 0\n  }, {\n    name: \"O+\",\n    count: 0\n  }, {\n    name: \"O-\",\n    count: 0\n  }]);\n  function handleCountUpdate(index, value) {\n    if (isNaN(value)) {\n      value = 0;\n    }\n    const newValue = value < 0 ? 0 : value;\n    setBloodCounts(prevState => prevState.map((count, i) => i === index ? {\n      ...count,\n      count: newValue\n    } : count, console.log(bloodCounts), console.log(index), console.log(prevState), console.log(value)));\n  }\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"borderbox\",\n    children: [/*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"frequencytext\",\n      children: \"Frequency of blood group (In Pints) \"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"Barchart\",\n      children: [/*#__PURE__*/_jsxDEV(BarChart, {\n        width: 600,\n        height: 400,\n        data: bloodCounts,\n        barCategoryGap: 18,\n        barGap: 9,\n        \"border-radius\": 80,\n        margin: {\n          top: 20,\n          right: 30,\n          left: 20,\n          bottom: 10\n        },\n        children: [/*#__PURE__*/_jsxDEV(CartesianGrid, {\n          stroke: \"white\",\n          strokeDasharray: \"1\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(XAxis, {\n          dataKey: \"name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(YAxis, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tooltip, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Bar, {\n          dataKey: \"count\",\n          className: \"bar\",\n          children: bloodCounts.map((bloodCount, index) => {\n            const barColor = bloodCount.count > 2 ? \"green\" : \"red\";\n            return /*#__PURE__*/_jsxDEV(Cell, {\n              fill: barColor\n            }, index, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 22\n            }, this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"Bloodtypetext\",\n        children: \"Blood Type\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"key\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle green\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"infoone\",\n          children: \"High\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"circle red\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"infotwo\",\n          children: \"Low\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"IncrementDecrementButtons\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"bloodcount\",\n        children: \"Blood Count\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 5\n      }, this), bloodCounts.map((bloodCountno, index) => (console.log(bloodCountno), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: \"bloodtypes\",\n          children: bloodCountno.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 7\n        }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n          className: \"bloodlabels\",\n          type: \"number\",\n          step: \"0.01\",\n          value: bloodCountno.count,\n          onChange: e => handleCountUpdate(index, parseFloat(e.target.value)),\n          onWheel: e => e.target.blur()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 7\n        }, this)]\n      }, index, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 5\n      }, this))), /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"submit\",\n        children: \"Submit Changes\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 3\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 5\n  }, this);\n}\n_s(BloodCountChart, \"NiGmBjOGPBbcwSjMD1UPtWjHFRw=\");\n_c = BloodCountChart;\nexport default BloodCountChart;\n\n/*<div className=\"IncrementDecrementButtons\">\r\n{bloodCounts.map((bloodCount, index) => (\r\n  console.log(bloodCount),\r\n  <div key={index}>\r\n    <span>{bloodCount.name}</span>\r\n    <button onClick={() => handleCountUpdate(index, bloodCount.count - 1 < 0 ? 0 : bloodCount.count - 1)}>-</button>\r\n    <input\r\n      type=\"string\"\r\n      value={bloodCount.count}              \r\n      \r\n    />\r\n    <button onClick={() => handleCountUpdate(index, bloodCount.count + 1)}>+</button>\r\n  </div>\r\n))}\r\n</div>*/\nvar _c;\n$RefreshReg$(_c, \"BloodCountChart\");","map":{"version":3,"names":["React","useState","BarChart","Bar","XAxis","YAxis","CartesianGrid","Tooltip","Cell","jsxDEV","_jsxDEV","BloodCountChart","_s","bloodCounts","setBloodCounts","name","count","handleCountUpdate","index","value","isNaN","newValue","prevState","map","i","console","log","className","children","fileName","_jsxFileName","lineNumber","columnNumber","width","height","data","barCategoryGap","barGap","margin","top","right","left","bottom","stroke","strokeDasharray","dataKey","bloodCount","barColor","fill","bloodCountno","type","step","onChange","e","parseFloat","target","onWheel","blur","_c","$RefreshReg$"],"sources":["C:/Users/codic/OneDrive/Documents/Blood-Donation-System---Frontend/frontend/src/BloodCountChart.js"],"sourcesContent":["import React, { useState  } from \"react\";\r\nimport \"./BloodCountChart.css\";\r\n\r\nimport {\r\n  BarChart,\r\n  Bar,\r\n  XAxis,\r\n  YAxis,\r\n  CartesianGrid,\r\n  Tooltip,\r\n  Cell,\r\n} from \"recharts\";\r\n\r\n\r\nfunction BloodCountChart() {\r\n  const [bloodCounts, setBloodCounts] = useState([\r\n    { name: \"A+\", count: 0 },\r\n    { name: \"A-\", count: 0 },\r\n    { name: \"B+\", count: 0 },\r\n    { name: \"B-\", count: 0 },\r\n    { name: \"AB+\", count: 0 },\r\n    { name: \"AB-\", count: 0 },\r\n    { name: \"O+\", count: 0 },\r\n    { name: \"O-\", count: 0 },\r\n  ]);\r\n\r\n  function handleCountUpdate(index, value) {\r\n    if (isNaN(value)) {\r\n      value = 0;\r\n    }\r\n    const newValue = value < 0 ? 0 : value;\r\n\r\n    setBloodCounts((prevState) =>\r\n      prevState.map(\r\n        (count, i) => (i === index ? { ...count, count: newValue } : count),\r\n        console.log(bloodCounts),\r\n        console.log(index),\r\n        console.log(prevState),\r\n        console.log(value)\r\n\r\n      )\r\n    );\r\n  }\r\n  \r\n  return (\r\n    <div className=\"borderbox\">\r\n      <p className=\"frequencytext\">Frequency of blood group (In Pints) </p>\r\n      <div className=\"Barchart\">\r\n        <BarChart       width={600}\r\n      height={400}\r\n      data={bloodCounts}\r\n      barCategoryGap={18}\r\n      barGap={9}\r\n      border-radius={80}\r\n      margin={{ top: 20, right: 30, left: 20, bottom: 10 }}\r\n    >\r\n          <CartesianGrid stroke=\"white\" strokeDasharray=\"1\" />\r\n          <XAxis dataKey=\"name\" />\r\n          <YAxis />\r\n          <Tooltip />\r\n          <Bar dataKey=\"count\" className=\"bar\">\r\n            {bloodCounts.map((bloodCount, index) => {\r\n              const barColor = bloodCount.count > 2 ? \"green\" : \"red\";\r\n              return <Cell key={index} fill={barColor}  />;\r\n            })}\r\n          </Bar>\r\n        </BarChart>\r\n        <p className=\"Bloodtypetext\">Blood Type</p>\r\n      </div>\r\n      <div className=\"key\">\r\n        <div>\r\n          <div className=\"circle green\"></div>\r\n          <p className=\"infoone\">High</p>\r\n        </div>\r\n        <div>\r\n          <div className=\"circle red\"></div>\r\n          <p className=\"infotwo\">\r\n            Low\r\n          </p>\r\n        </div>\r\n      </div>\r\n      \r\n      <div className=\"IncrementDecrementButtons\">\r\n\r\n    <p className=\"bloodcount\">Blood Count</p>\r\n    \r\n  {bloodCounts.map((bloodCountno, index) => (\r\n    console.log(bloodCountno),\r\n    <div key={index} >\r\n      <span className=\"bloodtypes\">{bloodCountno.name}</span>\r\n      <input className=\"bloodlabels\"\r\n        type=\"number\"\r\n        step=\"0.01\"\r\n        value={bloodCountno.count}\r\n        onChange={(e) =>\r\n          handleCountUpdate(index, parseFloat(e.target.value))\r\n        }\r\n        onWheel={(e) => e.target.blur()}\r\n      />\r\n      </div>\r\n   \r\n  ))}\r\n  <button className=\"submit\" >Submit Changes</button>\r\n</div>\r\n\r\n</div>);}\r\n\r\n\r\n\r\nexport default BloodCountChart;\r\n\r\n/*<div className=\"IncrementDecrementButtons\">\r\n{bloodCounts.map((bloodCount, index) => (\r\n  console.log(bloodCount),\r\n  <div key={index}>\r\n    <span>{bloodCount.name}</span>\r\n    <button onClick={() => handleCountUpdate(index, bloodCount.count - 1 < 0 ? 0 : bloodCount.count - 1)}>-</button>\r\n    <input\r\n      type=\"string\"\r\n      value={bloodCount.count}              \r\n      \r\n    />\r\n    <button onClick={() => handleCountUpdate(index, bloodCount.count + 1)}>+</button>\r\n  </div>\r\n))}\r\n</div>*/\r\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}